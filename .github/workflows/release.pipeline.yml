name: Release pipeline

on:
  push:
    branches: [ "release" ]
  pull_request:
    branches: [ "release" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean install

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.CREDS_JSON }}
      - uses: google-github-actions/setup-gcloud@main
      - name: Configure Docker Client
        run: |-
           gcloud auth configure-docker --quiet
           gcloud auth configure-docker europe-west1-docker.pkg.dev --quiet
      - name: Give github actions permission to read build_and_push.sh
        run: |-
          chmod +x build_and_push.sh
      - name: Build and push "Discovery" Docker Image to Artifact Registry
        run: |-
          ./build_and_push.sh "discovery" ${{ secrets.PROJECT_ID }} "discovery-service"
      - name: Build and push "Usergit" Docker Image to Artifact Registry
        run: |-
          ./build_and_push.sh "user" ${{ secrets.PROJECT_ID }} "user-service"
      - name: Build and push "Customer" Docker Image to Artifact Registry
        run: |-
          ./build_and_push.sh "customer" ${{ secrets.PROJECT_ID }} "customer-service"
      - name: Build and push "Transaction" Docker Image to Artifact Registry
        run: |-
          ./build_and_push.sh "transaction" ${{ secrets.PROJECT_ID }} "transaction-service"
      - name: Build and push "Edge" Docker Image to Artifact Registry
        run: |-
          ./build_and_push.sh "edge" ${{ secrets.PROJECT_ID }} "edge-service"
      - name: Build and push "Auth-Service" Docker Image to Artifact Registry
        run: |-
          ./build_and_push.sh "auth-service" ${{ secrets.PROJECT_ID }} "auth-service"
      - name: Build and push "Account" Docker Image to Artifact Registry
        run: |-
          ./build_and_push.sh "account" ${{ secrets.PROJECT_ID }} "account-service"
  Deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: kubectl - Google Cloud GKE cluster.
        uses: ameydev/gke-kubectl-action@master
        env:
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          APPLICATION_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
          CLUSTER_NAME: ${{ secrets.GKE_CLUSTER }}
          ZONE_NAME: ${{ secrets.GKE_ZONE }}
        with:
          args: apply -f k8s/